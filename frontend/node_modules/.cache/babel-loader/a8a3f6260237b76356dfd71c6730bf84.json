{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { TEXT, SAMTEXT } from './action';\nlet initText = {\n  searchText: ''\n};\nexport const getText = (state = initText, action = {}) => {\n  switch (action.type) {\n    case TEXT:\n      // console.log('reducer:', action.type);\n      return { ...state,\n        searchText: state.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\nlet initFMatch = {\n  res: {}\n};\nexport const setText = (state = initFMatch, action = {}) => {\n  switch (action.type) {\n    case SAMTEXT:\n      return { ...state,\n        res: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\nconst rootReducer = combineReducers({\n  getText,\n  setText\n});\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/Sharon/Desktop/final_app/tailwind/landing-page/src/redux/reducer.js"],"names":["combineReducers","TEXT","SAMTEXT","initText","searchText","getText","state","action","type","payload","initFMatch","res","setText","rootReducer"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAcC,OAAd,QAA4B,UAA5B;AAGA,IAAIC,QAAQ,GAAG;AACXC,EAAAA,UAAU,EAAE;AADD,CAAf;AAIA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACH,QAAP,EAAiBI,MAAM,GAAC,EAAxB,KAA8B;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,IAAL;AACI;AACJ,aAAO,EAAC,GAAGK,KAAJ;AAAWF,QAAAA,UAAU,EAACE,KAAK,CAACG;AAA5B,OAAP;;AACJ;AACI,aAAO,EAAC,GAAGH;AAAJ,OAAP;AALJ;AAOH,CARM;AAUP,IAAII,UAAU,GAAG;AACbC,EAAAA,GAAG,EAAE;AADQ,CAAjB;AAIA,OAAO,MAAMC,OAAO,GAAG,CAACN,KAAK,GAACI,UAAP,EAAmBH,MAAM,GAAC,EAA1B,KAAiC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,OAAL;AACI,aAAO,EAAC,GAAGI,KAAJ;AAAWK,QAAAA,GAAG,EAACJ,MAAM,CAACE;AAAtB,OAAP;;AACJ;AACI,aAAO,EAAC,GAAGH;AAAJ,OAAP;AAJR;AAMH,CAPM;AASP,MAAMO,WAAW,GAAGb,eAAe,CAAC;AAChCK,EAAAA,OADgC;AAEhCO,EAAAA;AAFgC,CAAD,CAAnC;AAKA,eAAeC,WAAf","sourcesContent":["import {combineReducers} from 'redux';\r\nimport {TEXT, SAMTEXT} from './action';\r\n\r\n\r\nlet initText = {\r\n    searchText: '', \r\n}\r\n\r\nexport const getText = (state=initText, action={}) =>{\r\n    switch (action.type) {\r\n        case TEXT:\r\n            // console.log('reducer:', action.type);\r\n        return {...state, searchText:state.payload}\r\n    default:\r\n        return {...state}\r\n    }\r\n}\r\n\r\nlet initFMatch = {\r\n    res: {}\r\n}\r\n\r\nexport const setText = (state=initFMatch, action={}) => {\r\n    switch (action.type) {\r\n        case SAMTEXT:\r\n            return {...state, res:action.payload}\r\n        default: \r\n            return {...state}\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    getText,\r\n    setText\r\n\r\n})\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}