{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sharon\\\\Desktop\\\\final_app\\\\tailwind\\\\landing-page\\\\src\\\\components\\\\Search.js\";\nimport React from 'react'; // import search from './search.css'\n\nimport { connect } from 'react-redux';\nimport { getText, setText } from '../redux/action';\n\nconst Search = props => {\n  const {\n    handleText,\n    setText,\n    searchText\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inline active-cyan-3 active-cyan-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search\",\n    onChange: handleText,\n    className: \"form-control form-control-sm ml-3 w-75\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setText(searchText),\n    className: \"btn-outline-success btn\",\n    type: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"search\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    searchText: state.getText.searchText,\n    res: state.setText.res\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleText: e => dispatch(getText(e.target.value)),\n    setText: param1 => dispatch(setText(param1))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["C:/Users/Sharon/Desktop/final_app/tailwind/landing-page/src/components/Search.js"],"names":["React","connect","getText","setText","Search","props","handleText","searchText","mapStateToProps","state","res","mapDispatchToProps","dispatch","e","target","value","param1"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,iBAAjC;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAEC,IAAAA,UAAF;AAAcH,IAAAA,OAAd;AAAuBI,IAAAA;AAAvB,MAAsCF,KAA5C;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACA,IAAA,WAAW,EAAC,QADZ;AAEA,IAAA,QAAQ,EAAEC,UAFV;AAGA,IAAA,SAAS,EAAC,wCAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI;AAAQ,IAAA,OAAO,EAAE,MAAMH,OAAO,CAACI,UAAD,CAA9B;AAA4C,IAAA,SAAS,EAAC,yBAAtD;AAAgF,IAAA,IAAI,EAAC,QAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CADJ;AASH,CAXD;;AAaA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHF,IAAAA,UAAU,EAAEE,KAAK,CAACP,OAAN,CAAcK,UADvB;AAEHG,IAAAA,GAAG,EAACD,KAAK,CAACN,OAAN,CAAcO;AAFf,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHN,IAAAA,UAAU,EAAGO,CAAD,IAAOD,QAAQ,CAACV,OAAO,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CADxB;AAEHZ,IAAAA,OAAO,EAAGa,MAAD,IAAYJ,QAAQ,CAACT,OAAO,CAACa,MAAD,CAAR;AAF1B,GAAP;AAIH,CALD;;AAOA,eAAef,OAAO,CAACO,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CP,MAA5C,CAAf","sourcesContent":["import React from 'react';\r\n// import search from './search.css'\r\nimport { connect } from 'react-redux'\r\nimport { getText, setText } from '../redux/action'\r\n\r\n\r\nconst Search = (props) => {\r\n    const { handleText, setText, searchText } = props\r\n    return (\r\n        <div className=\"form-inline active-cyan-3 active-cyan-4\">\r\n            <input type=\"text\" \r\n            placeholder=\"Search\"\r\n            onChange={handleText}\r\n            className=\"form-control form-control-sm ml-3 w-75\"/>\r\n            <button onClick={() => setText(searchText)} className=\"btn-outline-success btn\" type='search'>search</button> \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchText: state.getText.searchText,\r\n        res:state.setText.res\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleText: (e) => dispatch(getText(e.target.value)),\r\n        setText: (param1) => dispatch(setText(param1))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Search);"]},"metadata":{},"sourceType":"module"}