{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sharon\\\\Desktop\\\\final_app\\\\tailwind\\\\landing-page\\\\src\\\\components\\\\Search.js\";\nimport React from 'react'; // import search from './search.css'\n// import { connect } from 'react-redux'\n// import { getText, setText, setCity } from '../redux/action'\n\nconst APIKEY = 'MAjIj3A4LIsJqoNrDn74HNDnANduKaUw';\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.onTextChange = e => {\n      const value = e.target.value; // const {city} = this.state\n\n      if (value.length > 0) {\n        fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${APIKEY}&q=${value}`).then(response => response.json()).then(data => {\n          console.log(data);\n          this.setState({\n            suggestions: data\n          }); // this.setState({city:})\n        }).catch(err => {\n          console.log(err);\n        });\n      } // suggestions = city( val => {\n      //     return val.LocalizedName.toLowerCase().startsWith(value.toLowerCase())\n      // })\n      // this.setState({text:value, suggestions})\n      // else{\n      // this.setState({text:value})\n      // }\n\n    };\n\n    this.onTextClicked = key => {\n      console.log(key);\n    };\n\n    this.renderSuggestion = () => {\n      const {\n        suggestions\n      } = state;\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, suggestions.map(item => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: item.id,\n          onClick: () => onTextClicked(item.key),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 28\n          }\n        }, item.LocalizedName);\n      }));\n    };\n\n    this.state = {\n      suggestions: []\n    };\n  }\n\n  render() {\n    // const { onTextChange, setText, searchText } = props\n    // console.log('stext', searchText);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-inline active-cyan-3 active-cyan-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search\",\n      onChange: onTextChange,\n      className: \"form-control form-control-sm ml-3 w-75\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), renderSuggestion);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/Sharon/Desktop/final_app/tailwind/landing-page/src/components/Search.js"],"names":["React","APIKEY","Search","Component","constructor","onTextChange","e","value","target","length","fetch","then","response","json","data","console","log","setState","suggestions","catch","err","onTextClicked","key","renderSuggestion","state","map","item","id","LocalizedName","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,MAAMC,MAAM,GAAG,kCAAf;;AAGA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,GAAE;AACT;;AADS,SAObC,YAPa,GAOGC,CAAD,IAAO;AAClB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB,CADkB,CAElB;;AACA,UAAGA,KAAK,CAACE,MAAN,GAAe,CAAlB,EAAqB;AACjBC,QAAAA,KAAK,CAAE,8EAA6ET,MAAO,MAAKM,KAAM,EAAjG,CAAL,CACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,eAAKG,QAAL,CAAc;AAACC,YAAAA,WAAW,EAACJ;AAAb,WAAd,EAFU,CAGV;AACH,SAND,EAOCK,KAPD,CAOOC,GAAG,IAAI;AACVL,UAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACH,SATD;AAUH,OAdiB,CAed;AACA;AACA;AACA;AACJ;AACI;AACJ;;AACH,KA7BY;;AAAA,SA+BbC,aA/Ba,GA+BIC,GAAD,IAAS;AACrBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH,KAjCY;;AAAA,SAmCbC,gBAnCa,GAmCM,MAAM;AACrB,YAAM;AAACL,QAAAA;AAAD,UAAgBM,KAAtB;AACA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIN,WAAW,CAACO,GAAZ,CAAgBC,IAAI,IAAI;AACpB,4BAAO;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AACC,UAAA,OAAO,EAAE,MAAKN,aAAa,CAACK,IAAI,CAACJ,GAAN,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEMI,IAAI,CAACE,aAFX,CAAP;AAIH,OALD,CAFJ,CADJ;AAYH,KAjDY;;AAET,SAAKJ,KAAL,GAAa;AACTN,MAAAA,WAAW,EAAE;AADJ,KAAb;AAGH;;AA+CDW,EAAAA,MAAM,GAAG;AACL;AACA;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACA,MAAA,WAAW,EAAC,QADZ;AAEA,MAAA,QAAQ,EAAExB,YAFV;AAGA,MAAA,SAAS,EAAC,wCAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKKkB,gBALL,CADJ;AASH;;AAjEgC;;AAoErC,eAAerB,MAAf","sourcesContent":["import React from 'react';\r\n// import search from './search.css'\r\n// import { connect } from 'react-redux'\r\n// import { getText, setText, setCity } from '../redux/action'\r\nconst APIKEY = 'MAjIj3A4LIsJqoNrDn74HNDnANduKaUw'\r\n\r\n\r\nclass Search extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            suggestions: []\r\n        }\r\n    }\r\n\r\n    onTextChange = (e) => {\r\n        const value = e.target.value;\r\n        // const {city} = this.state\r\n        if(value.length > 0) {\r\n            fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${APIKEY}&q=${value}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                this.setState({suggestions:data});\r\n                // this.setState({city:})\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n        }\r\n            // suggestions = city( val => {\r\n            //     return val.LocalizedName.toLowerCase().startsWith(value.toLowerCase())\r\n            // })\r\n            // this.setState({text:value, suggestions})\r\n        // else{\r\n            // this.setState({text:value})\r\n        // }\r\n    }\r\n\r\n    onTextClicked = (key) => {\r\n        console.log(key);\r\n    }\r\n\r\n    renderSuggestion = () => {\r\n        const {suggestions} = state;\r\n        return (\r\n            <ul>\r\n            {\r\n                suggestions.map(item => {\r\n                    return <li key={item.id}\r\n                            onClick={()=> onTextClicked(item.key)}>\r\n                                {item.LocalizedName}\r\n                            </li>\r\n                })\r\n            }\r\n            </ul>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        // const { onTextChange, setText, searchText } = props\r\n        // console.log('stext', searchText);\r\n        return (\r\n            <div className=\"form-inline active-cyan-3 active-cyan-4\">\r\n                <input type=\"text\" \r\n                placeholder=\"Search\"\r\n                onChange={onTextChange}\r\n                className=\"form-control form-control-sm ml-3 w-75\"/>\r\n                {renderSuggestion}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}