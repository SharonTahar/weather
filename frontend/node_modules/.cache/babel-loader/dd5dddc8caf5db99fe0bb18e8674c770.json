{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sharon\\\\Desktop\\\\final_app\\\\frontend\\\\landing-page\\\\src\\\\components\\\\Search.js\";\nimport React from 'react';\nimport './dropdown.css';\nimport { APIKEY } from '../redux/constants';\nimport Daycard from './Daycard';\nimport { cities, forcast } from './dummyData';\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.onTextChange = e => {\n      this.setState({\n        suggestions: cities\n      }); // const value = e.target.value;\n      // // const {city} = this.state\n      // if(value.length > 0) {\n      //     fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${APIKEY}&q=${value}`)\n      //     .then(response => response.json())\n      //     .then(key => {\n      //         console.log(JSON.stringify(key));\n      //         this.setState({suggestions:key});\n      //     })\n      //     .catch(err => {\n      //         console.log(err);\n      //     })\n      // }\n    };\n\n    this.onBtnSubmit = () => {\n      console.log('check');\n    };\n\n    this.renderSuggestion = props => {\n      const {\n        suggestions\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, suggestions.map(item => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 28\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          Key: item.id,\n          onClick: () => this.onTextClicked(item.Key),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }\n        }, item.LocalizedName, \" \", item.Country.LocalizedName, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(\"li\", {\n          onClick: () => this.onBtnSubmit,\n          className: \"lg:hidden inline-block ml-2 fas fa-heart\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }\n        }, \"Add\"));\n      }));\n    };\n\n    this.onTextClicked = key => {\n      this.setState({\n        fiveDaysData: forcast\n      }); // fetch(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${key}?apikey=${APIKEY}&metric=true`)\n      // .then(response => response.json())\n      // .then(data => {\n      //     console.log(JSON.stringify(data));\n      //     this.setState({fiveDaysData:data});\n      // })\n      // .catch(err => {\n      //     console.log(err);\n      // })\n    };\n\n    this.saveFavorites = id => {\n      fetch('http://localhost:9000/saveFavorites/' + id, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify.id\n      }).then(response => response.json()).then(mydata => {\n        console.log(mydata);\n      }).catch(error => {\n        console.log(error);\n      });\n      console.log(id);\n    };\n\n    this.state = {\n      suggestions: [],\n      key: '',\n      city_key: '',\n      LocalizedName: ''\n    };\n  }\n\n  render() {\n    const {\n      key,\n      fiveDaysData\n    } = this.state; // console.log('forecast:', fiveDaysData);\n    // console.log('stext', searchText);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative flex w-full flex-wrap items-stretch mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search\",\n      value: key,\n      onChange: this.onTextChange,\n      className: \"px-2 py-1 placeholder-gray-400 text-gray-700 \\r relative bg-white bg-white rounded text-sm shadow \\r outline-none focus:outline-none focus:shadow-outline w-full pr-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"z-10 h-full leading-snug font-normal absolute text-center \\r text-gray-400 absolute bg-transparent rounded text-base items-center \\r justify-center w-8 right-0 pr-2 py-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, this.renderSuggestion())), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Daycard, {\n      data: fiveDaysData ? fiveDaysData.DailyForecasts[0] : {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, fiveDaysData ? fiveDaysData.DailyForecasts.map(item => {\n      return /*#__PURE__*/React.createElement(Daycard, {\n        data: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 40\n        }\n      });\n    }) : ''));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/Sharon/Desktop/final_app/frontend/landing-page/src/components/Search.js"],"names":["React","APIKEY","Daycard","cities","forcast","Search","Component","constructor","onTextChange","e","setState","suggestions","onBtnSubmit","console","log","renderSuggestion","props","state","map","item","id","onTextClicked","Key","LocalizedName","Country","key","fiveDaysData","saveFavorites","fetch","method","headers","body","JSON","stringify","then","response","json","mydata","catch","error","city_key","render","DailyForecasts"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './dropdown.css'\r\n\r\nimport { APIKEY } from '../redux/constants'\r\nimport Daycard from './Daycard';\r\nimport {cities, forcast} from './dummyData'\r\n\r\n\r\n\r\n\r\nclass Search extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            suggestions: [],\r\n            key: '',\r\n            city_key: '',\r\n            LocalizedName: ''\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    onTextChange = (e) => {\r\n        this.setState({suggestions:cities});\r\n        // const value = e.target.value;\r\n        // // const {city} = this.state\r\n        // if(value.length > 0) {\r\n        //     fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${APIKEY}&q=${value}`)\r\n        //     .then(response => response.json())\r\n        //     .then(key => {\r\n        //         console.log(JSON.stringify(key));\r\n        //         this.setState({suggestions:key});\r\n        //     })\r\n        //     .catch(err => {\r\n        //         console.log(err);\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    onBtnSubmit = () => {\r\n        console.log('check');\r\n    }\r\n\r\n    renderSuggestion = (props) => {\r\n        const {suggestions} = this.state;\r\n        return (\r\n            <ul>\r\n            {\r\n                suggestions.map(item => {\r\n                    return <div>\r\n                            <li Key={item.id}\r\n                            onClick={()=> this.onTextClicked(item.Key)}>\r\n                                {item.LocalizedName} {item.Country.LocalizedName}\r\n                                <br></br>\r\n                            </li>\r\n                                <li onClick={()=> this.onBtnSubmit} className=\"lg:hidden inline-block ml-2 fas fa-heart\">Add</li>\r\n                            </div>\r\n                            \r\n                })\r\n            }\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    onTextClicked = (key) => {\r\n        this.setState({fiveDaysData:forcast})\r\n        // fetch(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${key}?apikey=${APIKEY}&metric=true`)\r\n        // .then(response => response.json())\r\n        // .then(data => {\r\n        //     console.log(JSON.stringify(data));\r\n        //     this.setState({fiveDaysData:data});\r\n        // })\r\n        // .catch(err => {\r\n        //     console.log(err);\r\n        // })\r\n    }\r\n\r\n\r\n    saveFavorites = (id,) => {\r\n        fetch('http://localhost:9000/saveFavorites/' + id, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body:JSON.stringify.id\r\n    })\r\n        .then(response => response.json())\r\n        .then(mydata => {\r\n            console.log(mydata);\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n        console.log(id);\r\n    } \r\n\r\n    render() {\r\n        const { key, fiveDaysData } = this.state;\r\n        // console.log('forecast:', fiveDaysData);\r\n        // console.log('stext', searchText);\r\n        return (\r\n            <div className=\"relative flex w-full flex-wrap items-stretch mb-3\">\r\n            <input type=\"text\" \r\n                placeholder=\"Search\" \r\n                value={key}\r\n                onChange={this.onTextChange}\r\n                className=\"px-2 py-1 placeholder-gray-400 text-gray-700 \r\n                relative bg-white bg-white rounded text-sm shadow \r\n                outline-none focus:outline-none focus:shadow-outline w-full pr-10\"/>\r\n                <span className=\"z-10 h-full leading-snug font-normal absolute text-center \r\n                text-gray-400 absolute bg-transparent rounded text-base items-center \r\n                justify-center w-8 right-0 pr-2 py-1\">\r\n              <i className=\"fas fa-user\"></i>\r\n            </span>\r\n                <div className=\"relative\">\r\n                    <div className=\"dropdown\" >\r\n                        {this.renderSuggestion()}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <Daycard data={fiveDaysData?fiveDaysData.DailyForecasts[0]:{}} />\r\n                </div>\r\n                <div>\r\n                    {\r\n                        fiveDaysData?\r\n                            fiveDaysData.DailyForecasts.map(item =>{\r\n                                return <Daycard data={item} />\r\n                            }): ''\r\n                    }\r\n                </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}