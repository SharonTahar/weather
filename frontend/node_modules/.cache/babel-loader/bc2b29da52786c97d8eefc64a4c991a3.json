{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sharon\\\\Desktop\\\\final_app\\\\weatherApp\\\\frontend\\\\landing-page\\\\src\\\\App.js\";\nimport React from 'react';\nimport AOS from 'aos';\nimport { connect } from 'react-redux';\nimport { Link, Route, Redirect, Switch, useHistory } from \"react-router-dom\";\nimport PrivateRoute from './components/PrivateRoute'; // import SignOut from './components/SignOut';\n\nimport Landing from 'views/Lading';\nimport Login from './views/Login';\nimport Signup from './views/Signup';\nimport Profile from 'views/Profile';\nimport Navbar from 'components/Navbar';\nimport ContentSection from 'components/ContentSection';\nAOS.init();\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = (username, email, password) => {\n      // const { username, email, password } = this.state\n      console.log('handlesubmit:', username, email, password);\n      fetch('http://localhost:9000/signup', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      }).then(res => res.json()).then(data => {\n        // console.log(data);\n        if (data) {\n          if (data.message) {\n            console.log(data.message);\n          } else if (data.user) {\n            this.setState({\n              user: data,\n              redirect: '/',\n              isAuthenticated: true\n            });\n          }\n\n          console.log(data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.ontextSubmit = (email, password) => {\n      // console.log('ontextSubmit:', email, password);\n      fetch('http://localhost:9000/login', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      }).then(res => res.json()).then(data => {\n        // console.log(data);\n        if (data) {\n          if (data.message) {\n            console.log(data.message);\n          } else if (data.user) {\n            this.setState({\n              user: data,\n              redirect: '/profile',\n              isAuthenticated: true\n            });\n          } // console.log(data);\n\n        }\n      }).catch(err => {\n        console.log('error:', err);\n      });\n    };\n\n    this.state = {\n      isAuthenticated: false,\n      user: [],\n      redirect: null\n    };\n  } //signup method, sends data to backend to create a user\n  //authenticates and sets its state to true! \n\n\n  //  authenTicate =({ component: Component, ...rest}) => {\n  //     return (\n  //       <Route {...rest} render={(props) => (\n  //         this.state.isAuthenticated === true\n  //           ? <Component {...props}/>\n  //           :<Redirect to='/login'/>\n  //       )}/>\n  //     )\n  //   }\n  render() {\n    const {\n      redirect,\n      isAuthenticated\n    } = this.state;\n    const {\n      isAuthenticatedA,\n      userA\n    } = this.props;\n    console.log('isAuthenticatedA:', isAuthenticatedA, 'userA:', userA);\n    console.log('authneticate:', isAuthenticated, redirect); // console.log('user app', this.state.user);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      isAuthenticated: isAuthenticated,\n      path: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Landing, {\n      user: this.state.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ContentSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      render: () => /*#__PURE__*/React.createElement(Login, {\n        redirect: redirect,\n        ontextSubmit: this.ontextSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 49\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signup\",\n      render: () => /*#__PURE__*/React.createElement(Signup, {\n        redirect: redirect,\n        handleSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 50\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      isAuthenticated: isAuthenticated,\n      path: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Profile, {\n      user: this.state.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n} //gets the state from the store (state is calling the stores state)\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticatedA: state.authenticateUser.isAuthenticated,\n    userA: state.authenticateUser.user\n  };\n}; //updates state changes in the store \n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginA: (email, password) => dispatch(authentication(email, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Sharon/Desktop/final_app/weatherApp/frontend/landing-page/src/App.js"],"names":["React","AOS","connect","Link","Route","Redirect","Switch","useHistory","PrivateRoute","Landing","Login","Signup","Profile","Navbar","ContentSection","init","App","Component","constructor","handleSubmit","username","email","password","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","message","user","setState","redirect","isAuthenticated","catch","err","ontextSubmit","state","render","isAuthenticatedA","userA","props","mapStateToProps","authenticateUser","mapDispatchToProps","dispatch","loginA","authentication"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AOS from 'aos';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  Link,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n  useHistory\r\n} from \"react-router-dom\"\r\nimport PrivateRoute from './components/PrivateRoute';\r\n// import SignOut from './components/SignOut';\r\n\r\nimport Landing from 'views/Lading';\r\nimport Login from './views/Login';\r\nimport Signup from './views/Signup';\r\nimport Profile from 'views/Profile';\r\nimport Navbar from 'components/Navbar';\r\nimport ContentSection from 'components/ContentSection';\r\n\r\n\r\nAOS.init();\r\n\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super(); \r\n    this.state = {\r\n      isAuthenticated: false,\r\n      user: [],\r\n      redirect: null\r\n    }\r\n  }\r\n\r\n\r\n//signup method, sends data to backend to create a user\r\n//authenticates and sets its state to true! \r\n  handleSubmit = (username, email, password) => {\r\n    // const { username, email, password } = this.state\r\n    console.log('handlesubmit:', username, email, password);\r\n    fetch('http://localhost:9000/signup', {\r\n      method:'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body:JSON.stringify({\r\n        username,email,password\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      // console.log(data);\r\n      if(data) {\r\n        if(data.message) {\r\n          console.log(data.message)\r\n        }\r\n        else if(data.user) {\r\n          this.setState({user:data, redirect:'/', isAuthenticated: true})\r\n        }\r\n          \r\n        console.log(data);\r\n      }\r\n    }\r\n    )\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  //signin method to send the data to the server \r\n  ontextSubmit = (email, password) => {\r\n    // console.log('ontextSubmit:', email, password);\r\n    fetch('http://localhost:9000/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body:JSON.stringify({\r\n        email,password\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      // console.log(data);\r\n      if(data) {\r\n        if(data.message) {\r\n          console.log(data.message)\r\n        }\r\n        else if(data.user) {\r\n          \r\n          this.setState({user:data, redirect:'/profile', isAuthenticated: true})\r\n        }\r\n        // console.log(data);\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log('error:', err);\r\n    })\r\n  }\r\n\r\n\r\n//  authenTicate =({ component: Component, ...rest}) => {\r\n//     return (\r\n//       <Route {...rest} render={(props) => (\r\n//         this.state.isAuthenticated === true\r\n//           ? <Component {...props}/>\r\n//           :<Redirect to='/login'/>\r\n//       )}/>\r\n//     )\r\n//   }\r\n\r\n\r\n  render() {\r\n    const { redirect, isAuthenticated } = this.state; \r\n    const {isAuthenticatedA, userA } = this.props\r\n    console.log('isAuthenticatedA:', isAuthenticatedA, 'userA:' , userA );\r\n    console.log('authneticate:',isAuthenticated, redirect);\r\n    // console.log('user app', this.state.user);\r\n    return (\r\n        <div>\r\n          <Navbar />\r\n          {/* <Route path='/logout' render={ () => <SignOut redirect={redirect} />} /> */}\r\n          <Switch>\r\n          <Route isAuthenticated={isAuthenticated} path='/' exact >\r\n              <Landing user={this.state.user} />\r\n              <ContentSection />\r\n            </Route>\r\n            <Route path='/login' render={ () => <Login redirect={redirect} \r\n              ontextSubmit={this.ontextSubmit} />} />\r\n            <Route path='/signup' render={ () => <Signup redirect={redirect} \r\n              handleSubmit={this.handleSubmit} />} />\r\n           <PrivateRoute isAuthenticated={isAuthenticated} path=\"/profile\">\r\n            <Profile user={this.state.user}/>\r\n          </PrivateRoute>\r\n          </Switch>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n//gets the state from the store (state is calling the stores state)\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n  isAuthenticatedA: state.authenticateUser.isAuthenticated,\r\n  userA: state.authenticateUser.user\r\n  }\r\n}\r\n\r\n//updates state changes in the store \r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loginA: (email, password) => dispatch(authentication(email, password))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}